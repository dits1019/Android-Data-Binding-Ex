<?xml version="1.0" encoding="utf-8"?>
<!-- 데이터 바인딩을 사용하기 위해서는 layout이 최상위 요소여야 함 -->
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".MainActivity">

    <!-- 레이아웃에서 뷰 모델을 참조하기 위해서 변수 생성 -->
    <data>
        <!-- variable은 변수 이름과 변수 타입을 가진다 -->
        <!-- 뷰 모델 객체의 위치가 다른 곳에 있거나 객체 이름이 다르다면 이를 적절히
        변경해서 적용 -->
        <variable
            name="viewModel"
            type="com.example.databindingex.MainActivity.ViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!-- "변수명::메서드명"의 형태를 레퍼런스라고 하며
         메서드를 넘겨주기 위해 지정하는 방식으로 종종 사용
         android:onClick="@{viewModel::sayHello}" -->

<!--        <TextView-->
<!--            android:id="@+id/txt1"-->
<!--            android:layout_width="wrap_content"-->
<!--            android:layout_height="wrap_content"-->
<!--            android:text="@{viewModel.title}"-->
<!--            android:onClick="@{() -> viewModel.sayHello()}"-->
<!--            app:layout_constraintBottom_toBottomOf="parent"-->
<!--            app:layout_constraintLeft_toLeftOf="parent"-->
<!--            app:layout_constraintRight_toRightOf="parent"-->
<!--            app:layout_constraintTop_toTopOf="parent" />-->

        <!-- 바인딩 어댑터
        app:reverseText 속성에 뷰 모델의 속성 title을 데이터 바인딩으로 연결-->

        <TextView
            android:id="@+id/txt2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:reverseText="@{viewModel.title}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent" />


            </androidx.constraintlayout.widget.ConstraintLayout>
        </layout>